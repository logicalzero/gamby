/*
GAMBY Initial Test Sketch
~~~~~~~~~~~~~~~~~~~~~~~~~

This is a simple sketch to serve as an initial test of a freshly-built
GAMBY shield. It just displays a GAMBY splash screen.

by David R. Stokes (gamby@logicalzero.com) 2012-08-14. Updated 2015-10-14.
*/


#include <Gamby.h>
#include <avr/pgmspace.h>

//////////////////////////////////////////////////////////////////////////////
// Splash screen graphics. These are in the form of one 8x96 pixel icon with
// eight frames, although it isn't animated; instead, each frame contains one
// horizontal stripe of the image, and they are all shown similtaneously to
// form one full-screen image.

const PROGMEM byte splash[] = {
    96,
    // Row 0
    0xff, 0x57, 0xbf, 0x55, 0xaf, 0x55, 0x3b, 0x55, 0x2b, 0x55, 0x23, 0x55,
    0xa, 0x55, 0x23, 0x55, 0xa, 0x15, 0x2, 0x55, 0x2, 0x15, 0x2, 0x55, 0x2,
    0x15, 0x2, 0x55, 0x2, 0x15, 0x2, 0x55, 0x2, 0x15, 0x2, 0x55, 0x2, 0x15,
    0x2, 0x55, 0x2, 0x15, 0x2, 0x55, 0x2, 0x15, 0x2, 0x55, 0x2, 0x15, 0x2,
    0x55, 0x2, 0x15, 0x2, 0x55, 0x2, 0x15, 0x2, 0x55, 0x2, 0x15, 0x2, 0x55,
    0x2, 0x15, 0x2, 0x55, 0x2, 0x15, 0x2, 0x55, 0x2, 0x15, 0x2, 0x55, 0x2,
    0x15, 0x2, 0x55, 0xa, 0x55, 0x23, 0x55, 0xa, 0x55, 0x2b, 0x55, 0xab, 0x55,
    0x3b, 0x55, 0xaf, 0x55, 0xbf, 0x55,
    // Row 1
    0xaf, 0x55, 0x2b, 0x55, 0xa, 0x55, 0x2, 0x55, 0x0, 0x11, 0x0, 0x5, 0x0,
    0x11, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0,
    0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1,
    0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0,
    0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0,
    0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x11, 0x0, 0x5, 0x0, 0x11,
    0x0, 0x55, 0x0, 0x55, 0x22, 0x55, 0x8a, 0x55, 0xab, 0x55,
    // Row 2
    0x2a, 0x95, 0xc2, 0xe5, 0x70, 0x39, 0x1c, 0xe, 0x6, 0x6, 0x86, 0x86, 0x86,
    0x86, 0x86, 0x86, 0x6, 0x6, 0xe, 0x1c, 0x1c, 0xe, 0x6, 0x6, 0x86, 0x86,
    0x86, 0x86, 0x86, 0x86, 0x6, 0x6, 0xe, 0x1c, 0x38, 0x70, 0xe0, 0xc0, 0xe0,
    0x70, 0x38, 0x1c, 0xe, 0x6, 0x6, 0xe, 0x1c, 0x38, 0x70, 0x70, 0x38, 0x1c,
    0xe, 0x6, 0x6, 0xe, 0x1c, 0x38, 0x78, 0xfc, 0xe, 0x6, 0x6, 0x6, 0x86,
    0x86, 0x86, 0x86, 0x86, 0x86, 0x86, 0x6, 0x6, 0xe, 0x1c, 0x38, 0x7c, 0x8e,
    0x6, 0x6, 0xe, 0x1c, 0x38, 0x70, 0xe0, 0xc1, 0x80, 0x0, 0xf8, 0xfc, 0xe,
    0x6, 0x6, 0xe, 0xfc, 0xf9,
    // Row 3
    0xff, 0xff, 0x1, 0x68, 0xd2, 0x4, 0xf9, 0xfc, 0xfe, 0xcf, 0x97, 0xa7,
    0x97, 0xa7, 0x97, 0x67, 0xd7, 0xa6, 0xc, 0xf9, 0x18, 0xed, 0x96, 0xe7,
    0x57, 0xa7, 0x97, 0xa7, 0x97, 0xa7, 0x97, 0x86, 0xfc, 0xf9, 0x2, 0x68,
    0xd4, 0x3, 0xff, 0x0, 0x54, 0xe9, 0x0, 0xfe, 0xfe, 0x3d, 0x78, 0x72, 0x70,
    0x76, 0x70, 0x79, 0x3c, 0xfe, 0xfe, 0x1, 0x52, 0xe8, 0x0, 0xff, 0x0, 0xe8,
    0x95, 0x28, 0xd3, 0xcb, 0xd3, 0xcb, 0xd3, 0xcb, 0xd3, 0xc9, 0xaa, 0x50,
    0xe5, 0xa8, 0x9c, 0x7e, 0xff, 0xfe, 0xfc, 0xf9, 0xf4, 0xe2, 0xc8, 0xb5,
    0x53, 0xa7, 0xef, 0x9f, 0x60, 0xd2, 0xa8, 0x0, 0xff, 0xff,
    // Row 4
    0x8f, 0x1f, 0x3c, 0x7b, 0xf7, 0xef, 0xde, 0xdd, 0xdb, 0xdb, 0xdb, 0xdb,
    0xdb, 0xdb, 0xdb, 0xdc, 0xdf, 0xdf, 0xe0, 0xff, 0xf0, 0xef, 0xde, 0xde,
    0xdd, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdd, 0xde, 0xef, 0xef,
    0xdf, 0xde, 0xdd, 0xde, 0xdf, 0xdf, 0xe0, 0xff, 0x7f, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x7f, 0xff, 0xe0, 0xdf, 0xdf, 0xdc, 0xdb, 0xda, 0xda,
    0xda, 0xda, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdd, 0xde,
    0xef, 0xf6, 0xf9, 0xe6, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb,
    0xdb, 0xda, 0xdd, 0xde, 0xdf, 0xdf, 0xef, 0xf0, 0x7f, 0x3f,
    // Row 5
    0xaa, 0x55, 0x2, 0xf0, 0x98, 0x69, 0x69, 0x9, 0xf9, 0x9, 0xd9, 0xe9, 0xf9,
    0x99, 0x69, 0x6d, 0x5, 0xfd, 0x89, 0x78, 0x78, 0x9, 0xfd, 0x15, 0xfd, 0x9,
    0xe9, 0xe9, 0x19, 0xf1, 0x99, 0x69, 0x69, 0x99, 0xf1, 0x1, 0x1, 0x1, 0xf9,
    0x9, 0xd9, 0xe9, 0xf9, 0x98, 0x28, 0x48, 0xd8, 0xf8, 0xec, 0x84, 0x6c,
    0xf8, 0x8, 0xd8, 0xe8, 0xf9, 0x99, 0x69, 0x69, 0x99, 0xf1, 0x1, 0x1, 0x1,
    0xf1, 0x99, 0x69, 0x69, 0x9, 0xf9, 0x99, 0x69, 0x69, 0x9, 0xf9, 0x8, 0xe8,
    0x9, 0xe9, 0x19, 0xfd, 0x15, 0xfd, 0x9, 0xe9, 0xe9, 0x19, 0xf1, 0x99,
    0x69, 0x69, 0x9, 0xf9, 0x0, 0x22, 0x55,
    // Row 6
    0xea, 0x55, 0xa0, 0x51, 0x8b, 0x53, 0x23, 0x53, 0x03, 0x13, 0x03, 0x40, 0x01,
    0x13, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x3,
    0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x3, 0x0,
    0x01, 0x03, 0x03, 0x03, 0x03, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00, 0x1, 0x3,
    0x03, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x01, 0x0f, 0x0d, 0x0d, 0x0e, 0x07, 0x03, 0x3,
    0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x13, 0x03, 0x43, 0x03, 0x13,
    0x03, 0x43, 0x0f, 0x4d, 0x2d, 0x4e, 0xa7, 0x50, 0xaa, 0x55,
    // Row 7
    0xff, 0x55, 0xfb, 0x55, 0xea, 0x55, 0xba, 0x55, 0xa8, 0x55, 0xa2, 0x55,
    0xa0, 0x55, 0xa0, 0x54, 0x80, 0x51, 0x20, 0x54, 0x80, 0x51, 0x20, 0x54,
    0x80, 0x51, 0x20, 0x54, 0x80, 0x51, 0x20, 0x54, 0x80, 0x51, 0x20, 0x54,
    0x80, 0x51, 0x20, 0x54, 0x80, 0x51, 0x20, 0x54, 0x80, 0x51, 0x20, 0x54,
    0x80, 0x51, 0x20, 0x54, 0x80, 0x51, 0x20, 0x54, 0x80, 0x51, 0x20, 0x54,
    0x80, 0x51, 0x20, 0x54, 0x80, 0x51, 0x20, 0x54, 0x80, 0x51, 0x20, 0x54,
    0x80, 0x51, 0x20, 0x54, 0x80, 0x51, 0x20, 0x54, 0x80, 0x55, 0xa0, 0x55,
    0xa0, 0x55, 0xa2, 0x55, 0xa8, 0x55, 0xba, 0x55, 0xea, 0x55, 0xfb, 0x55
};


//////////////////////////////////////////////////////////////////////////////

// Create the GAMBY object. We're using GambyTextMode, even though we aren't
// using any text; it's just the lightest-weight mode.
GambyTextMode gamby;


void setup () {
  // Draw the splash screen one 8px row at a time.
  for (byte i=0; i<8; i++) {
    gamby.setPos(0,i);
    gamby.drawIcon(splash, i);
  }
}

void loop () {
  // Nothing here. The code in setup() did everything we needed.
}
